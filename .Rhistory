ind_map2 <- ggplot(plot.data) +
geom_polygon(aes(fill = bldgsqft, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "Average Building Size\n (Sq.ft.)") +
theme_clean()
grid.arrange(ind_map1, ind_map2, nrow=1)
fullvars <- c("I(2016-Med_Yr_Bui)", "bldgsqft", "bldgval", "gis_acres",
"density", "Avg_HHSize", "MHI", "pct_rent", "pct_black",
"pct_white", "pct_hisp", "Pct_Educated", "pct_65", "pct_u18", "am", "af", "pm")
# Full Model 1
lm.full <- lm(paste("exp_norm15 ~ ", paste(fullvars, collapse="+"),sep = ""), data = cbg_redu)
mcvars <- c("MHI","pct_white", "Pct_Educated")
X <- cbg_redu@data[,mcvars]
#ggpairs(X)
# From the call below we can ascertain that bldgsqft and bldgval are multicolinear. We should remove building value since
# building size is a consistent factor in literature
car::vif(lm.full)
# full model without bldgval
lm.full <- lm(paste("exp_norm15 ~ ", paste(fullvars[!grepl("bldgval", fullvars)], collapse="+"),sep = ""), data = cbg_redu)
reduvars <- c("I(2017-Med_Yr_Bui)", "bldgsqft",
"density", "Avg_HHSize", "pct_rent",
"pct_white", "pct_hisp", "Pct_Educated", "pct_65", "pct_u18", "am", "af")
lm.redu <- lm(paste("exp_norm15 ~ ", paste(reduvars, collapse="+"),sep = ""), data = cbg_redu)
#summary(lm.redu)
car::vif(lm.redu)
scatter1 <- ggplot(cbg_redu@data, aes(bldgsqft,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Building Size (Sq.Ft.)", y = "Energy Expenditure ($/yr/hh)")
scatter2 <- ggplot(cbg_redu@data, aes(Med_Yr_Bui,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Median Building Age (Year)", y = "Energy Expenditure ($/yr/hh)")
scatter3 <- ggplot(cbg_redu@data, aes(gis_acres,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Lot Size (Acres)", y = "Energy Expenditure ($/yr/hh)")
scatter4 <- ggplot(cbg_redu@data, aes(Avg_HHSize,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Household Size (# of People)", y = "Energy Expenditure ($/yr/hh)")
scatter5 <- ggplot(cbg_redu@data, aes(Pct_Educated,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population With Higher Education", y = "Energy Expenditure ($/yr/hh)")
scatter6 <- ggplot(cbg_redu@data, aes(am,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Morning Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
grid.arrange(scatter1, scatter2, scatter3, scatter4, scatter5, scatter6, nrow=2)
scatter1 <- ggplot(cbg_redu@data, aes(bldgsqft,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Building Size (Sq.Ft.)", y = "Energy Expenditure ($/yr/hh)")
scatter2 <- ggplot(cbg_redu@data, aes(Med_Yr_Bui,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Median Building Age (Year)", y = "Energy Expenditure ($/yr/hh)")
scatter3 <- ggplot(cbg_redu@data[cbg_redu@data$gis_acres < 1,], aes(gis_acres,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Lot Size (Acres)", y = "Energy Expenditure ($/yr/hh)")
scatter4 <- ggplot(cbg_redu@data, aes(Avg_HHSize,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Household Size (# of People)", y = "Energy Expenditure ($/yr/hh)")
scatter5 <- ggplot(cbg_redu@data, aes(Pct_Educated,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population With Higher Education", y = "Energy Expenditure ($/yr/hh)")
scatter6 <- ggplot(cbg_redu@data, aes(am,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Morning Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
grid.arrange(scatter1, scatter2, scatter3, scatter4, scatter5, scatter6, nrow=2)
geom_point(size=1.5) +
labs(x="Building Density (SFR Units / Acre)", y = "Energy Expenditure ($/yr/hh)")
scatter1 <- ggplot(cbg_redu@data, aes(density,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Building Density (SFR Units / Acre)", y = "Energy Expenditure ($/yr/hh)")
scatter2 <- ggplot(cbg_redu@data, aes(pct_rent,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% Renter Population", y = "Energy Expenditure ($/yr/hh)")
scatter3 <- ggplot(cbg_redu@data, aes(pct_u18,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population Under 18", y = "Energy Expenditure ($/yr/hh)")
scatter4 <- ggplot(cbg_redu@data, aes(pct_65,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population Over 65", y = "Energy Expenditure ($/yr/hh)")
scatter5 <- ggplot(cbg_redu@data, aes(am,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Morning Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
scatter6 <- ggplot(cbg_redu@data, aes(af,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Afternoon Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
scatter7 <- ggplot(cbg_redu@data, aes(pm,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Evening Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
grid.arrange(scatter1, scatter2, scatter3, scatter4, scatter5, scatter6, scatter7 nrow=3)
grid.arrange(scatter1, scatter2, scatter3, scatter4, scatter5, scatter6, scatter7, nrow=3)
ind_map1 <- ggplot(plot.data) +
geom_polygon(aes(fill = Pct_Educated, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "% of Population With\n Higher Education") +
theme_clean()
ind_map2 <- ggplot(plot.data[plot.data$pct_65 < .75,]) +
geom_polygon(aes(fill = pct_65, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "% of Population\n Over 65") +
theme_clean()
grid.arrange(ind_map1, ind_map2, nrow=1)
ind_map1 <- ggplot(plot.data) +
geom_polygon(aes(fill = Pct_Educated, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "% of Population With\n Higher Education") +
theme_clean()
ind_map2 <- ggplot(plot.data[plot.data$pct_65 < .6,]) +
geom_polygon(aes(fill = pct_65, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "% of Population\n Over 65") +
theme_clean()
grid.arrange(ind_map1, ind_map2, nrow=1)
ind_map3 <- ggplot(plot.data[plot.data$gis_acres < 1,]) +
geom_polygon(aes(fill = gis_acres, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "Average Lot Size\n (Acres)") +
theme_clean()
ind_map4 <- ggplot(plot.data) +
geom_polygon(aes(fill = density, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "Density \n (SFR Buildings / Acre)") +
theme_clean()
grid.arrange(ind_map3, ind_map4, nrow=1)
ind_map3 <- ggplot(plot.data[plot.data$gis_acres < .75,]) +
geom_polygon(aes(fill = gis_acres, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "Average Lot Size\n (Acres)") +
theme_clean()
ind_map4 <- ggplot(plot.data) +
geom_polygon(aes(fill = density, x = long, y = lat, group = group), col = "black", size = 0.025) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, name = "Density \n (SFR Buildings / Acre)") +
theme_clean()
grid.arrange(ind_map3, ind_map4, nrow=1)
scatter1 <- ggplot(cbg_redu@data, aes(bldgsqft,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Building Size (Sq.Ft.)", y = "Energy Expenditure ($/yr/hh)")
scatter2 <- ggplot(cbg_redu@data, aes(Med_Yr_Bui,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Median Building Age (Year)", y = "Energy Expenditure ($/yr/hh)")
scatter3 <- ggplot(cbg_redu@data[cbg_redu@data$gis_acres < 1,], aes(gis_acres,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Lot Size (Acres)", y = "Energy Expenditure ($/yr/hh)")
scatter4 <- ggplot(cbg_redu@data, aes(Avg_HHSize,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Household Size (# of People)", y = "Energy Expenditure ($/yr/hh)")
scatter5 <- ggplot(cbg_redu@data, aes(Pct_Educated,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population With Higher Education", y = "Energy Expenditure ($/yr/hh)")
scatter6 <- ggplot(cbg_redu@data, aes(MHI,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Median Household Income ($)")), y = "Energy Expenditure ($/yr/hh)")
scatter7 <- ggplot(cbg_redu@data, aes(pct_white,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% White Population", y = "Energy Expenditure ($/yr/hh)")
scatter8 <- ggplot(cbg_redu@data, aes(pct_black,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% Black Population", y = "Energy Expenditure ($/yr/hh)")
scatter9 <- ggplot(cbg_redu@data, aes(pct_hisp,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("% Hispanic Population")), y = "Energy Expenditure ($/yr/hh)")
scatter10 <- ggplot(cbg_redu@data, aes(density,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Building Density (SFR Units / Acre)", y = "Energy Expenditure ($/yr/hh)")
scatter11 <- ggplot(cbg_redu@data, aes(pct_rent,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% Renter Population", y = "Energy Expenditure ($/yr/hh)")
scatter12 <- ggplot(cbg_redu@data, aes(pct_u18,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population Under 18", y = "Energy Expenditure ($/yr/hh)")
scatter13 <- ggplot(cbg_redu@data, aes(pct_65,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population Over 65", y = "Energy Expenditure ($/yr/hh)")
scatter14 <- ggplot(cbg_redu@data, aes(am,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Morning Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
scatter15 <- ggplot(cbg_redu@data, aes(af,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Afternoon Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
scatter16 <- ggplot(cbg_redu@data, aes(pm,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Average Evening Temperature (",degree,"C)")), y = "Energy Expenditure ($/yr/hh)")
grid.arrange(scatter1, scatter2, scatter3, scatter4, scatter5, scatter6,
scatter7, scatter8, scatter9, scatter10, scatter11, scatter12,
scatter13, scatter14, scatter15, scatter16, nrow=4)
16/6
grid.arrange(scatter1, scatter2, scatter3, scatter4, scatter5, scatter6,
scatter7, scatter8, scatter9, scatter10, scatter11, scatter12,
scatter13, scatter14, scatter15, scatter16, nrow=6)
scatter1 <- ggplot(cbg_redu@data, aes(bldgsqft,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Building Size (Sq.Ft.)", y = "Energy Expenditure ($/yr/hh)")
scatter2 <- ggplot(cbg_redu@data, aes(Med_Yr_Bui,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Median Building Age (Year)", y = "Energy Expenditure ($/yr/hh)")
scatter3 <- ggplot(cbg_redu@data[cbg_redu@data$gis_acres < 1,], aes(gis_acres,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Lot Size (Acres)", y = "Energy Expenditure ($/yr/hh)")
scatter4 <- ggplot(cbg_redu@data, aes(Avg_HHSize,exp_norm15)) +
geom_point(size=1.5) +
labs(x="Average Household Size (# of People)", y = "Energy Expenditure ($/yr/hh)")
scatter5 <- ggplot(cbg_redu@data, aes(Pct_Educated,exp_norm15)) +
geom_point(size=1.5) +
labs(x="% of Population With Higher Education", y = "Energy Expenditure ($/yr/hh)")
scatter6 <- ggplot(cbg_redu@data, aes(MHI,exp_norm15)) +
geom_point(size=1.5) +
labs(x=expression(paste("Median Household Income ($)")), y = "Energy Expenditure ($/yr/hh)")
grid.arrange(scatter1, scatter2, scatter3, scatter4, scatter5, scatter6, nrow=2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(ggplot2)
library(pander)
library(sf)
library(spdep)
library(rgdal)
library(car)
library(corrplot)
library(gridExtra)
library(stargazer) # outputs nice looking tables
library(GGally)
options(stringsAsFactors = FALSE)
panderOptions('round', 4)
panderOptions('digits', 4)
cbg <- readOGR("/Users/Alec Trusty/Dropbox/SUPR_SFR_EE/Data/pdx_cbg/euf_cbg_1072019.shp")
cbg_raw <- readOGR("/Users/Alec Trusty/Dropbox/SUPR_SFR_EE/Data/pdx_cbg/euf_cbg_1072019.shp")
cbg <- subset(cbg, !is.na(cbg$X)) # removes block groups with no UHI data
cbg$Avg_HHSize <- cbg$AVG_HHSIZE
cbg$Med_Yr_Bui <- cbg$med_yr_bui # calculated from our data
cbg$TotPop <- cbg$TOTPOP
cbg$Pop_Under1 <- cbg$POPUND18
cbg$Pop_65Over <- cbg$POPOVR65
cbg$H_Units <- cbg$H_UNITS
cbg$Pop_White <- cbg$POPWHITE
cbg$Pop_Black <- cbg$POPBLACK
cbg$Pop_Hisp <- cbg$POPHISP
cbg$Pop_Native <- cbg$POPNATIVE
cbg$count <- cbg$sfr_nt
# Need to fix some data types before moving forward
cbg@data$Med_Yr_Bui <- as.numeric(cbg@data$Med_Yr_Bui)
#cbg@data$Pop_Under5 <- as.numeric(cbg@data$Pop_Under5)
cbg@data$Pop_Under1 <- as.numeric(cbg@data$Pop_Under1)
cbg@data$Pop_65Over <- as.numeric(cbg@data$Pop_65Over)
cbg@data$Pop_Native <- as.numeric(cbg@data$Pop_Native)
cbg$exp_norm15 <- cbg$sum_exp16 / cbg$count
# Remove very large and small block groups, and those with few SFR Buildings
cbg$cbg_area <- sapply(slot(cbg, "polygons"), slot, "area") # create an area field
cbg <- subset(cbg, cbg$cbg_area < 5.0e+07 & cbg$cbg_area > 1e+06) #visually remove the large and very small block groups
cbg <- subset(cbg, cbg$sfr_nt > 40) # subset CBGs with less than 40 SFR (As Chang et al did)
# Remove expenditure outliers
exp_outlier <- max(boxplot.stats(cbg@data$exp_norm15)$out)
cbg <- subset(cbg, cbg$exp_norm15 > exp_outlier)
#cbg <- subset(cbg, cbg$exp_norm15 > 1100 & cbg$exp_norm15 < 2200) # used boxplot statistics to remove blockgroups with outlying expenditures
# Remove spatial outliers
cbg <- subset(cbg, !(cbg@data$fips == "410510072012") & !(cbg@data$fips == "410050232021"))
# Note: the remaining apparent slivers are part of larger block groups that still
# meet the above criteria
medePuter <- function(x){
x<-as.numeric(as.character(x)) #first convert each column into numeric if it is from factor
x[is.na(x)] <- median(x, na.rm=TRUE) #convert the item with NA to median value from the column
x #display the column
}
# Make a table of counts -- 10 in MHI, 1 in Med_Yr_Built
colSums(is.na(cbg@data))
# Impute median values into missing data
cbg@data <- as.data.frame(apply(cbg@data,2,medePuter))
cbg_redu <- cbg # renaming reduced dataset
cbg_redu$density <- cbg_redu$count/cbg_redu$cbg_area
#cbg_redu$exp_normarea <- cbg_redu$sum_exp16/cbg_redu$cbg_area
cbg_redu$Pct_Educated <- cbg_redu$GT25_GTBA / cbg_redu$TotPop
cbg_redu$pct_black <- cbg_redu$Pop_Black/cbg_redu$TotPop
cbg_redu$pct_white <- cbg_redu$Pop_White/cbg_redu$TotPop
cbg_redu$pct_hisp <- cbg_redu$Pop_Hisp/cbg_redu$TotPop
cbg_redu$pct_65 <- cbg_redu$Pop_65Over/cbg_redu$TotPop
cbg_redu$pct_u18 <- cbg_redu$Pop_Under1/cbg_redu$TotPop
#cbg_redu$pct_rent <- (cbg_redu$TotPop - cbg_redu$OOHU) / cbg_redu$TotPop
#cbg_redu$pct_rent <- (cbg_redu$H_Units - cbg_redu$OOHU) / cbg_redu$H_Units
cbg_redu$pct_rent <- cbg_redu$PCTRENT
names(cbg_redu)
names(cbg_redu)
corvars <- c("exp_norm15", "bldgsqft", "Med_Yr_Bui", "gis_acres",
"AVg_HHSize", "Pct_Educated", "MHI", "pct_white",
"pct_black", "pct_hisp", "density", "pct_rent",
"pct_u18", "pct_65", "am", "af", "pm")
cordf <- cbg_redu[,corvars]
corvars <- c("exp_norm15", "bldgsqft", "Med_Yr_Bui", "gis_acres",
"AVg_HHSize", "Pct_Educated", "MHI", "pct_white",
"pct_black", "pct_hisp", "density", "pct_rent",
"pct_u18", "pct_65", "am", "af", "pm")
!(corvars %in% colnames(cbg_redu))
cbg_redu <- cbg # renaming reduced dataset
cbg_redu$density <- cbg_redu$count/cbg_redu$cbg_area
#cbg_redu$exp_normarea <- cbg_redu$sum_exp16/cbg_redu$cbg_area
cbg_redu$Pct_Educated <- cbg_redu$GT25_GTBA / cbg_redu$TotPop
cbg_redu$pct_black <- cbg_redu$Pop_Black/cbg_redu$TotPop
cbg_redu$pct_white <- cbg_redu$Pop_White/cbg_redu$TotPop
cbg_redu$pct_hisp <- cbg_redu$Pop_Hisp/cbg_redu$TotPop
cbg_redu$pct_65 <- cbg_redu$Pop_65Over/cbg_redu$TotPop
cbg_redu$pct_u18 <- cbg_redu$Pop_Under1/cbg_redu$TotPop
#cbg_redu$pct_rent <- (cbg_redu$TotPop - cbg_redu$OOHU) / cbg_redu$TotPop
#cbg_redu$pct_rent <- (cbg_redu$H_Units - cbg_redu$OOHU) /
cbg_redu$pct_rent <- cbg_redu$PCTRENT
cordf <- cbg_redu[,corvars]
corvars <- c("exp_norm15", "bldgsqft", "Med_Yr_Bui", "gis_acres",
"AVg_HHSize", "Pct_Educated", "MHI", "pct_white",
"pct_black", "pct_hisp", "density", "pct_rent",
"pct_u18", "pct_65", "am", "af", "pm")
names(cbg_redu)
!(colnames(cbg_redu) %in% corvars)
corvars[!(colnames(cbg_redu) %in% corvars)]
corvars[!(corvars %in% colnames(cbg_redu))]
names(cbg_redu)
corvars <- c("exp_norm15", "bldgsqft", "Med_Yr_Bui", "gis_acres",
"Avg_HHSize", "Pct_Educated", "MHI", "pct_white",
"pct_black", "pct_hisp", "density", "pct_rent",
"pct_u18", "pct_65", "am", "af", "pm")
cor(cordf)
cordf <- cbg_redu[,corvars]
cor(cordf, method = "pearson")
cordf <- as.data.frame(cbg_redu[,corvars])
cor(cordf, method = "pearson")
library(Hmisc)
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
round(cor(cordf, method = "pearson"), 2)
pander(round(cor(cordf, method = "pearson"), 2))
?cor
#Attempting to calculate Local Moran's I from some online resources: http://rstudio-pubs-static.s3.amazonaws.com/4938_b5fc230d586c48b291627ff6ea484d2e.html
cbg <- cbg_redu
# create row-standardized contiguity weights matrix
pdx_nb <- poly2nb(cbg)
pdx_nb_w <- nb2listw(pdx_nb)
#calculate local moran's I
locm <- localmoran(cbg@data$exp_norm15, pdx_nb_w)
# No idea what this output is yet
#summary(locm)
mor <- moran(cbg@data$exp_norm15, pdx_nb_w)
cbg <- cbg_redu
# create row-standardized contiguity weights matrix
pdx_nb <- poly2nb(cbg)
pdx_nb_w <- nb2listw(pdx_nb)
#calculate local moran's I
locm <- localmoran(cbg@data$exp_norm15, pdx_nb_w)
mor <- moran(cbg@data$exp_norm15, pdx_nb_w)
#calculate local moran's I
locm <- localmoran(cbg@data$exp_norm15, pdx_nb_w)
mor <- moran.test(cbg@data$exp_norm15, pdx_nb_w)
mor
# No idea what this output is yet
#summary(locm)
paste("Moran's I:", mor)
# No idea what this output is yet
#summary(locm)
paste("Moran's I:", mor$statistic)
# No idea what this output is yet
#summary(locm)
paste("Moran's I:", mor$estimate)
# No idea what this output is yet
#summary(locm)
paste("Moran's I:", mor$estimate[1])
install.packages('rconnect')
rsconnect::setAccountInfo(name='alectrusty',
token='2090169AEA479558211B34EADD4C0138',
secret='<SECRET>')
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='alectrusty',
token='2090169AEA479558211B34EADD4C0138',
secret='<SECRET>')
rsconnect::setAccountInfo(name='alectrusty',
token='2090169AEA479558211B34EADD4C0138',
secret='<SECRET>')
Sys.setlocale(locale="en_US.UTF-8")
rsconnect::setAccountInfo(name='alectrusty',
token='2090169AEA479558211B34EADD4C0138',
secret='<SECRET>')
setwd("D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/")
library(shiny); runApp('dashboard_example.R')
library(rsconnect)
setwd("D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/")
rsconnect::deployApp('PDX_Housing_Dashboard.R')
rsconnect::deployApp('PDX_Housing_Dashboard.R')
rsconnect::setAccountInfo(name='alectrusty',
token='2090169AEA479558211B34EADD4C0138',
secret='AHRpBW2D2v0okzxd6Ut1XxHNopjBWvXFFqeLqfib')
library(rsconnect)
setwd("D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/")
rsconnect::deployApp('PDX_Housing_Dashboard.R')
rsconnect::deployApp('PDX_Housing_Dashboard')
rsconnect::deployApp('PDX_Housing_Dashboard')
rsconnect::deployApp('PDX_Housing_Dashboard/')
rsconnect::deployApp('PDX_Housing_Dashboard/')
rsconnect::deployApp('/PDX_Housing_Dashboard/')
rsconnect::deployApp('/PDX_Housing_Dashboard')
rsconnect::deployApp('D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/PDX_Housing_Dashboard/')
runApp('PDX_Housing_Dashboard/app.R.R')
rsconnect::deployApp('D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/PDX_Housing_Dashboard/app.R')
rsconnect::deployApp('D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/PDX_Housing_Dashboard/')
rsconnect::deployApp('D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/PDX_Housing_Dashboard/')
rsconnect::deployApp(appDir = 'D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/PDX_Housing_Dashboard/', appName = "PDX Housing Explorer", account = 'alectrusty')
setwd("D:/ajax/trusty_analytics/Shiny-Applications/Shiny_PDX_HousingExplorer/")
rsconnect::deployApp(appDir = 'PDX_Housing_Dashboard/', appName = "PDX Housing Explorer", account = 'alectrusty')
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/")
library(rsconnect)
rsconnect::deployApp(appDir = 'PDX_Housing_Dashboard/', appName = "PDX Housing Explorer", account = 'alectrusty')
setwd("DemoApp/")
library(shiny)
runApp()
library(rsconnect)
deployApp()
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/")
rsconnect::deployApp(appDir = 'PDX_Housing_Dashboard/', appName = "PDX Housing Explorer", account = 'alectrusty')
setwd("DemoApp/")
library(shiny)
runApp()
library(rsconnect)
deployApp()
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/")
rsconnect::deployApp(appDir = 'PDX_Housing_Dashboard/', appName = "PDX Housing Explorer", account = 'alectrusty')
deployApp()
runApp('PDX_Housing_Dashboard')
runApp('PDX_Housing_Dashboard')
runApp('PDX_Housing_Dashboard')
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/PDX_Housing_Dashboard/")
deployApp()
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/PDX_Housing_Dashboard/")
deployApp()
runApp()
runApp()
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/PDX_Housing_Dashboard/")
deployApp()
#rsconnect::deployApp(appDir = 'PDX_Housing_Dashboard/', appName = "PDX Housing Explorer", account = 'alectrusty')
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/PDX_Housing_Dashboard/")
deployApp()
runApp()
runApp()
runApp()
library(rgdal)
runApp()
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/PDX_Housing_Dashboard/")
deployApp()
runApp()
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/PDX_Housing_Dashboard/")
deployApp()
runApp()
library(rsconnect)
setwd("D:/ajax/trusty_analytics/SA/PDX_HousingExplorer/PDX_Housing_Dashboard/")
deployApp()
library(leaflet)
extent <- 11000000 + 9036842.762 + 667
origin = c(-extent, extent)
maxResolution <- ((extent - -extent) / 256)
defZoom <- 4
bounds <- list(c(-extent, extent),c(extent, -extent))
minZoom <- 0
maxZoom <- 18
resolutions <- purrr::map_dbl(minZoom:maxZoom,function(x) maxResolution/(2^x))
# 6 Projection EPSG Codes
projections <- c('3571', '3572', '3573', '3574', '3575', '3576')
# Corresponding proj4defs codes for each projection
proj4defs <- list(
'3571' = '+proj=laea +lat_0=90 +lon_0=180 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',
'3572' = '+proj=laea +lat_0=90 +lon_0=-150 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',
'3573' = '+proj=laea +lat_0=90 +lon_0=-100 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',
'3574' = '+proj=laea +lat_0=90 +lon_0=-40 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',
'3575' = '+proj=laea +lat_0=90 +lon_0=10 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',
'3576' = '+proj=laea +lat_0=90 +lon_0=90 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs'
)
# create a CRS instance for each projection
crses <- purrr::map(projections, function(code) {
leafletCRS(
crsClass = 'L.Proj.CRS',
code = sprintf("EPSG:%s",code),
proj4def = proj4defs[[code]],
origin = origin,
resolutions = resolutions,
bounds = bounds
)
})
# Tile URL Template for each projection
tileURLtemplates <- purrr::map(projections, function(code) {
sprintf('http://{s}.tiles.arcticconnect.org/osm_%s/{z}/{x}/{y}.png',
code)
})
# We can't add all 6 tiles to our leaflet map,
# because each one is in a different projection,
# and you can have only one projection per map in Leaflet.
# So we create 6 maps.
polarmaps <- purrr::map2(crses, tileURLtemplates,
function(crs, tileURLTemplate) {
leaflet(options= leafletOptions(
crs=crs, minZoom = minZoom, maxZoom = maxZoom)) %>%
setView(0, 90, defZoom) %>%
addTiles(urlTemplate = tileURLTemplate,
attribution = "Map © ArcticConnect. Data © OpenStreetMap contributors",
options = tileOptions(subdomains = "abc", noWrap = TRUE,
continuousWorld = FALSE))
})
polarmaps[[1]] %>%
addGraticule()
polarmaps[[2]] %>%
addGraticule()
polarmaps[[3]] %>%
addGraticule()
shiny::runApp()
